lexer grammar LA;

NUM_REAL: (Mais | Menos)? ('0'..'9')+ ('.' ('0'..'9')+);
NUM_INT: (Mais | Menos)? ('0'..'9')+;
Literal: 'literal';
Inteiro: 'inteiro';
Real: 'real';
Logico: 'logico';
Declare: 'declare';
Algoritmo: 'algoritmo';
FimAlgoritmo: 'fim_algoritmo';
Leia: 'leia';
Escreva: 'escreva';
Se: 'se';
DoisPontos: ':';
AbreParentese: '(';
FechaParentese: ')';
Virgula: ',';
Circunflexo: '^';
Comentario: '{' ~('\n')* '}' {skip();};
ComentarioNaoFechado: '{' ~('}')*? '\n';
CadeiaLiteralNaoFechada: '"' ~('"')* '\n';
FechamentoComentarioIsolado: ~('{')*? '}' .*?;
CADEIA: '"' ~('\n'|'\r'|'"' | '\\')*? '"';
Entao: 'entao';
Senao: 'senao';
FimSe: 'fim_se';
Caso: 'caso';
Seja: 'seja';
FimCaso: 'fim_caso';
Para: 'para';
Atrib: '<-';
Ate: 'ate';
Faca: 'faca';
FimPara: 'fim_para';
Enquanto: 'enquanto';
FimEnquanto: 'fim_enquanto';
Retorne: 'retorne';
TipoToken: 'tipo';
Constante: 'constante';
Procedimento: 'procedimento';
FimProcedimento: 'fim_procedimento';
Funcao: 'funcao';
FimFuncao: 'fim_funcao';
Var: 'var';
Verdadeiro: 'verdadeiro';
Falso: 'falso';
EspacoEmBranco: (' '|'\t'|'\r'|'\n') {skip();};
Porcentagem: '%';
Barra: '/';
Asterisco: '*';
Mais: '+';
Menos: '-';
EComercial: '&';
Igual: '=';
Diferente: '<>';
MaiorIgual: '>=';
MenorIgual: '<=';
Maior: '>';
Menor: '<';
Ponto: '.';
RegistroToken: 'registro';
FimRegistro: 'fim_registro';
Nao: 'nao';
E: 'e';
Ou: 'ou';
AbreColchete: '[';
FechaColchete: ']';
Intervalo: '..';
IDENT: (Letra | Sublinha)(Letra | Sublinha | Digito)*;

OpLogico1: Ou;
OpLogico2: E;
Op1: Mais | Menos;
Op2: Asterisco | Barra;
Op3: Porcentagem;

fragment Letra: 'a'..'z' | 'A'..'Z';
fragment Digito: '0'..'9';
fragment Sublinha: '_';

Erro: .;